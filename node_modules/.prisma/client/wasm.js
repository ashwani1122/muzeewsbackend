
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  provider: 'provider'
};

exports.Prisma.StreamScalarFieldEnum = {
  id: 'id',
  type: 'type',
  url: 'url',
  extractedId: 'extractedId',
  title: 'title',
  smallImg: 'smallImg',
  bigImg: 'bigImg',
  active: 'active',
  played: 'played',
  playedTs: 'playedTs',
  createAt: 'createAt',
  userId: 'userId',
  addedBy: 'addedBy',
  spaceId: 'spaceId'
};

exports.Prisma.CurrentStreamScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  streamId: 'streamId',
  spaceId: 'spaceId'
};

exports.Prisma.UpvoteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  streamId: 'streamId'
};

exports.Prisma.SpaceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  hostId: 'hostId',
  isActive: 'isActive'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.StreamType = exports.$Enums.StreamType = {
  Spotify: 'Spotify',
  Youtube: 'Youtube'
};

exports.Provider = exports.$Enums.Provider = {
  Google: 'Google'
};

exports.Prisma.ModelName = {
  User: 'User',
  Stream: 'Stream',
  CurrentStream: 'CurrentStream',
  Upvote: 'Upvote',
  Space: 'Space'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Asus\\Desktop\\Music_player\\roomBased\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Asus\\Desktop\\Music_player\\roomBased\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           String   @id @default(uuid())\n  email        String   @unique\n  provider     Provider\n  streams      Stream[] @relation(\"user\")\n  upvotes      Upvote[]\n  addedStreams Stream[] @relation(\"addedBy\")\n  hostedSpaces Space[]  @relation(\"hostedBy\")\n}\n\nmodel Stream {\n  id            String         @id @default(uuid())\n  type          StreamType\n  url           String\n  extractedId   String\n  title         String         @default(\"\")\n  smallImg      String         @default(\"\")\n  bigImg        String         @default(\"\")\n  active        Boolean        @default(true)\n  played        Boolean        @default(false)\n  playedTs      DateTime?\n  createAt      DateTime       @default(now())\n  upvotes       Upvote[]\n  userId        String\n  user          User           @relation(fields: [userId], references: [id], name: \"user\")\n  currentStream CurrentStream?\n  addedBy       String\n  addedByUser   User           @relation(\"addedBy\", fields: [addedBy], references: [id])\n  spaceId       String?\n  space         Space?         @relation(\"spaceStreams\", fields: [spaceId], references: [id], onDelete: Cascade)\n}\n\nmodel CurrentStream {\n  id       String  @id @default(uuid())\n  userId   String\n  streamId String? @unique\n  stream   Stream? @relation(fields: [streamId], references: [id])\n  spaceId  String? @unique\n  space    Space?  @relation(fields: [spaceId], references: [id], onDelete: Cascade)\n}\n\nmodel Upvote {\n  id       String @id @default(uuid())\n  userId   String\n  streamId String\n  user     User   @relation(fields: [userId], references: [id])\n  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, streamId])\n}\n\nmodel Space {\n  id            String         @id @default(uuid())\n  name          String\n  streams       Stream[]       @relation(\"spaceStreams\")\n  hostId        String\n  host          User           @relation(\"hostedBy\", fields: [hostId], references: [id])\n  isActive      Boolean        @default(true)\n  currentStream CurrentStream?\n}\n\nenum StreamType {\n  Spotify\n  Youtube\n}\n\nenum Provider {\n  Google\n}\n",
  "inlineSchemaHash": "7538bdb9b4d76f8caabd55ca34da140fa2fce63a5f86f2ad0286eb686ea568ed",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"Provider\"},{\"name\":\"streams\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"user\"},{\"name\":\"upvotes\",\"kind\":\"object\",\"type\":\"Upvote\",\"relationName\":\"UpvoteToUser\"},{\"name\":\"addedStreams\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"addedBy\"},{\"name\":\"hostedSpaces\",\"kind\":\"object\",\"type\":\"Space\",\"relationName\":\"hostedBy\"}],\"dbName\":null},\"Stream\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"StreamType\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extractedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smallImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bigImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"played\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"playedTs\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"upvotes\",\"kind\":\"object\",\"type\":\"Upvote\",\"relationName\":\"StreamToUpvote\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"user\"},{\"name\":\"currentStream\",\"kind\":\"object\",\"type\":\"CurrentStream\",\"relationName\":\"CurrentStreamToStream\"},{\"name\":\"addedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"addedBy\"},{\"name\":\"spaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"space\",\"kind\":\"object\",\"type\":\"Space\",\"relationName\":\"spaceStreams\"}],\"dbName\":null},\"CurrentStream\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"streamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"CurrentStreamToStream\"},{\"name\":\"spaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"space\",\"kind\":\"object\",\"type\":\"Space\",\"relationName\":\"CurrentStreamToSpace\"}],\"dbName\":null},\"Upvote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"streamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpvoteToUser\"},{\"name\":\"stream\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"StreamToUpvote\"}],\"dbName\":null},\"Space\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"streams\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"spaceStreams\"},{\"name\":\"hostId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"host\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"hostedBy\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currentStream\",\"kind\":\"object\",\"type\":\"CurrentStream\",\"relationName\":\"CurrentStreamToSpace\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

